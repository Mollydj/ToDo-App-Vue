{"remainingRequest":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/src/App.vue","mtime":1590027271610},{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/css-loader/dist/cjs.js","mtime":1589931451951},{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1589931454857},{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/postcss-loader/src/index.js","mtime":1589931453483},{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1589931451350},{"path":"/Users/mollydeangelis-jimenez/Documents/GitHub/ToDo-App-Vue/node_modules/vue-loader/lib/index.js","mtime":1589931454856}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiBZb3UgY2FuIGFkZCBnbG9iYWwgc3R5bGVzIHRvIHRoaXMgZmlsZSwgYW5kIGFsc28gaW1wb3J0IG90aGVyIHN0eWxlIGZpbGVzICovCkBpbXBvcnQgdXJsKCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVNoYXJlK1RlY2grTW9ubyZkaXNwbGF5PXN3YXAiKTsKYm9keSB7CiAgZm9udC1mYW1pbHk6ICJTaGFyZSBUZWNoIE1vbm8iLCBtb25vc3BhY2U7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOwp9Ci5jb250YWluZXIgewogIHdpZHRoOiA3MCU7CiAgZm9udC1mYW1pbHk6ICJTaGFyZSBUZWNoIE1vbm8iLCBtb25vc3BhY2U7CiAgbWFyZ2luOiBhdXRvOwogIGRpc3BsYXk6IGJsb2NrOwp9CmlucHV0W3R5cGU9InRleHQiXSB7CiAgZm9udC1mYW1pbHk6ICJTaGFyZSBUZWNoIE1vbm8iLCBtb25vc3BhY2U7CiAgYm9yZGVyOiAwcHg7Cn0KZGl2LApzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmU7CiAgcGFkZGluZzogMHB4OwogIGJvcmRlcjogMXB4Owp9CmJ1dHRvbiB7CiAgZm9udC1mYW1pbHk6ICJTaGFyZSBUZWNoIE1vbm8iLCBtb25vc3BhY2U7CiAgYm9yZGVyOiBub25lOwogIGZsb2F0OiByaWdodDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"todo\">\n      <h2 style=\"float:left;\">\n        {{ this.todos.length - todoCounter().length }} Tasks Left\n      </h2>\n      <h2 style=\"float:right;\">{{ todoCounter().length }} Tasks Completed</h2>\n\n      <md-field>\n        <label class=\"black\"><b>Jot it down...</b></label>\n        <md-input\n          v-model=\"currentTodo\"\n          class=\"todo-item form-control input-height\"\n          type=\"text\"\n          @keydown.enter=\"addTodo()\"\n        >\n        </md-input>\n      </md-field>\n\n      <div v-for=\"todo in todos\" :key=\"todo.id\">\n        <span v-if=\"!todo.editing\" >\n          {{ todo.label }}\n        </span>\n        <md-input\n          v-model=\"todo.label\"\n          v-if=\"todo.editing\"\n          @dblclick=\"todo.editing = true\"\n           v-autowidth=\"{maxWidth: '960px', minWidth: '20px', comfortZone: 0}\"\n          @keyup.enter=\"edittodo(todo)\"\n          type=\"text\"\n        >\n          <span v-if=\"!todo.editing\">\n            {{ todo.description }}\n          </span>\n        </md-input>\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          v-model=\"todo.completed\"\n          style=\"float:right;\"\n          @click=\"completetodo(todo)\"\n        />\n        <button @click=\"removeTodo(todo)\" class=\"delete-button\">Delete</button>\n        <button\n          type=\"button\"\n          @click=\"todo.editing = true\"\n          class=\"btn btn-default edit-button edit-todo\"\n        >\n          Edit\n        </button>\n        <br />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      todos: [],\n      currentTodo: \"\",\n      editTodo: \"\",\n      boolean: false,\n      totalChecked: 0,\n    };\n  },\n  methods: {\n    addTodo() {\n      this.todos.push({\n        id: this.todos.length,\n        label: this.currentTodo,\n        completed: false,\n        editing: false,\n      });\n      this.currentTodo = \"\";\n    },\n    removeTodo(todo) {\n      var index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    edittodo: function(todo) {\n      todo.editing = false;\n    },\n    completetodo: function(todo) {\n      todo.completed = true;\n      todo.counter = document.querySelectorAll(\n        'input[type=\"checkbox\"]:checked'\n      ).length;\n    },\n    todoCounter() {\n      return this.todos.filter((value) => value.completed === true);\n    },\n    totalTodos() {\n      return this.todos.length;\n    },\n  },\n};\n</script>\n\n<style>\n/* You can add global styles to this file, and also import other style files */\n@import url(\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap\");\nbody {\n  font-family: \"Share Tech Mono\", monospace;\n  background-color: lightblue;\n}\n.container {\n  width: 70%;\n  font-family: \"Share Tech Mono\", monospace;\n  margin: auto;\n  display: block;\n}\ninput[type=\"text\"] {\n  font-family: \"Share Tech Mono\", monospace;\n  border: 0px;\n}\ndiv,\nspan {\n  display: inline;\n  padding: 0px;\n  border: 1px;\n}\nbutton {\n  font-family: \"Share Tech Mono\", monospace;\n  border: none;\n  float: right;\n}\n</style>"]}]}